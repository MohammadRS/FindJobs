// <auto-generated />
using System;
using FindJobs.DataAccess.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FindJobs.DataAccess.Migrations
{
    [DbContext(typeof(FindJobsDbContext))]
    [Migration("20221115193715_SummarizeAll")]
    partial class SummarizeAll
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Applicant", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address")
                        .HasMaxLength(95)
                        .HasColumnType("nvarchar(95)");

                    b.Property<bool>("AllowSearchEngines")
                        .HasColumnType("bit");

                    b.Property<string>("ApplicantImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AvailableDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<decimal>("HourlyAverage")
                        .HasMaxLength(10)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HourlyFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HourlyUntil")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDrivingLicense")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEuropeanUnion")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFreelancer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFullTime")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHourlyRate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInternShip")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPartTime")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPartialworkfromhome")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSwitzerland")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUnitedStatesofAmerica")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWorkFromHome")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWorkPlace")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LicenseType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("ProfileVisible")
                        .HasColumnType("int");

                    b.Property<int>("RateType")
                        .HasColumnType("int");

                    b.Property<int>("ReadyToWorkStatus")
                        .HasColumnType("int");

                    b.Property<bool>("ShowAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowAge")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowCountryOrCity")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowGender")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhone")
                        .HasColumnType("bit");

                    b.HasKey("Email");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryCode");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantDocuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicantEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtensionFile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantEmail");

                    b.ToTable("ApplicantDocuments");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicantEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EducationLevel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndEducation")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstituteName")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartEducation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantEmail");

                    b.ToTable("ApplicantEducations");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantKnowledge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicantEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnowledgeLevel")
                        .HasColumnType("int");

                    b.Property<string>("KnowledgeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantEmail");

                    b.ToTable("ApplicantKnowledges");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicantEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageLevel")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantEmail");

                    b.ToTable("ApplicantLanguages");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicantEmail")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantEmail");

                    b.ToTable("ApplicantPreference");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantWorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicantEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndWork")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrentlyWorking")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobPosition")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartWork")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantEmail");

                    b.ToTable("ApplicantWorkExperiences");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AsciiName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Capital")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Iso3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Lat")
                        .HasMaxLength(100)
                        .HasColumnType("float");

                    b.Property<double>("Lng")
                        .HasMaxLength(100)
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Population")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("StateName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Company", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AboutCompany")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<int>("CompanyRegistrationId")
                        .HasColumnType("int");

                    b.Property<string>("ContactPersonEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactPersonPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTop")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumberOfEmployee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TaxNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VatNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Country", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Capital")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContinentCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CurrencySign")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Importance")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEuropeanUnion")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PhonePrefix")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Code");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Culture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.ToTable("Cultures");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Code");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.GeoLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("FromIp")
                        .HasColumnType("bigint");

                    b.Property<string>("Latitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Region")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Timezone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ToIp")
                        .HasColumnType("bigint");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GeoLocation");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.JobCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Jobcategory")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Knowledge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.HasKey("Id");

                    b.ToTable("Knowledges");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Importance")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Agreement")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Benifits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoShowApplicantsSalary")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ExprationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Freelancer")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDriverLicenceA")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDriverLicenceB")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDriverLicenceC")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDriverLicenceD")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDriverLicenceE")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHighSchoolStudent")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHigherEducationLevel1")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHigherEducationLevel2")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHigherEducationLevel3")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPostSecondary")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPrimaryEducation")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSecondarySchoolWithGraduation")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSecondarySchoolWithOutGraduation")
                        .HasColumnType("bit");

                    b.Property<bool>("HasUniversityStudent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullTime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternShip")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartTime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartialWorkFromHome")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTravelRequirement")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkAtTheRegularWorkPlace")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkingFromHome")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerType")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("UpperLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WorkPlaceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyEmail");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.OfferKnowledge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnowledgeId")
                        .HasColumnType("int");

                    b.Property<int>("KnowledgeLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KnowledgeId");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferKnowledges");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.OfferLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferLanguages");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Authority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<int>("GetwayType")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRefunded")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.VerificationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateVerifyTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifyCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.ToTable("VerificationCodes");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Applicant", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.City", "City")
                        .WithMany("Applicants")
                        .HasForeignKey("CityId");

                    b.HasOne("FindJobs.DataAccess.Entities.Country", "Country")
                        .WithMany("Applicants")
                        .HasForeignKey("CountryCode");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantDocuments", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Applicant", "Applicant")
                        .WithMany("ApplicantDocuments")
                        .HasForeignKey("ApplicantEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantEducation", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Applicant", "Applicant")
                        .WithMany("ApplicantEducations")
                        .HasForeignKey("ApplicantEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantKnowledge", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Applicant", "Applicant")
                        .WithMany("ApplicantKnowledges")
                        .HasForeignKey("ApplicantEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantLanguage", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Applicant", "Applicant")
                        .WithMany("ApplicantLanguages")
                        .HasForeignKey("ApplicantEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantPreference", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Applicant", "Applicant")
                        .WithMany("ApplicantPreferences")
                        .HasForeignKey("ApplicantEmail");

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.ApplicantWorkExperience", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Applicant", "Applicant")
                        .WithMany("ApplicantWorkExperiences")
                        .HasForeignKey("ApplicantEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.City", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Country", "Countries")
                        .WithMany("Cities")
                        .HasForeignKey("CountryCode");

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Culture", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Country", "Countries")
                        .WithMany("Cultures")
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Offer", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyEmail");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.OfferKnowledge", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Knowledge", "Knowledge")
                        .WithMany("OfferKnowledges")
                        .HasForeignKey("KnowledgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FindJobs.DataAccess.Entities.Offer", "Offer")
                        .WithMany("Knowledges")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Knowledge");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.OfferLanguage", b =>
                {
                    b.HasOne("FindJobs.DataAccess.Entities.Language", "Language")
                        .WithMany("OfferLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FindJobs.DataAccess.Entities.Offer", "Offer")
                        .WithMany("Languages")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Applicant", b =>
                {
                    b.Navigation("ApplicantDocuments");

                    b.Navigation("ApplicantEducations");

                    b.Navigation("ApplicantKnowledges");

                    b.Navigation("ApplicantLanguages");

                    b.Navigation("ApplicantPreferences");

                    b.Navigation("ApplicantWorkExperiences");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.City", b =>
                {
                    b.Navigation("Applicants");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Country", b =>
                {
                    b.Navigation("Applicants");

                    b.Navigation("Cities");

                    b.Navigation("Cultures");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Knowledge", b =>
                {
                    b.Navigation("OfferKnowledges");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Language", b =>
                {
                    b.Navigation("OfferLanguages");
                });

            modelBuilder.Entity("FindJobs.DataAccess.Entities.Offer", b =>
                {
                    b.Navigation("Knowledges");

                    b.Navigation("Languages");
                });
#pragma warning restore 612, 618
        }
    }
}
