<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Additionalsection" xml:space="preserve">
    <value>Section supplémentaire</value>
  </data>
  <data name="agreement" xml:space="preserve">
    <value>accord</value>
  </data>
  <data name="AppliedJos" xml:space="preserve">
    <value>Appliqué Jos</value>
  </data>
  <data name="Availability" xml:space="preserve">
    <value>Disponibilité</value>
  </data>
  <data name="Average" xml:space="preserve">
    <value>Moyenne</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>BirthDate</value>
  </data>
  <data name="Certificates" xml:space="preserve">
    <value>Certificats</value>
  </data>
  <data name="ChooseLanguage" xml:space="preserve">
    <value>Choisissez votre langue et votre apparence</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Ville</value>
  </data>
  <data name="ContactDetail" xml:space="preserve">
    <value>Coordonnées</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Pays</value>
  </data>
  <data name="CourseName" xml:space="preserve">
    <value>Nom du cours</value>
  </data>
  <data name="CourseOrCertificate" xml:space="preserve">
    <value>Cours Ou Certificat</value>
  </data>
  <data name="CoverLetter" xml:space="preserve">
    <value>Lettre de motivation</value>
  </data>
  <data name="CV" xml:space="preserve">
    <value>CV</value>
  </data>
  <data name="CvLanguage" xml:space="preserve">
    <value>Langue du CV</value>
  </data>
  <data name="DownloadasCSV" xml:space="preserve">
    <value>Télécharger au format csv</value>
  </data>
  <data name="Downloadaspdf" xml:space="preserve">
    <value>Télécharger en pdf</value>
  </data>
  <data name="Dr" xml:space="preserve">
    <value>Docteur</value>
  </data>
  <data name="Driving" xml:space="preserve">
    <value>Conduite</value>
  </data>
  <data name="Drivinglicense" xml:space="preserve">
    <value>Permis de conduire</value>
  </data>
  <data name="Education" xml:space="preserve">
    <value>Éducation</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EmailPrefernces" xml:space="preserve">
    <value>Préférences de messagerie</value>
  </data>
  <data name="Employer" xml:space="preserve">
    <value>Employeuse</value>
  </data>
  <data name="EuropeanUnion" xml:space="preserve">
    <value>Union européenne</value>
  </data>
  <data name="female" xml:space="preserve">
    <value>Mme</value>
  </data>
  <data name="First and Last Name" xml:space="preserve">
    <value>Nom et prénom</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Freelancer" xml:space="preserve">
    <value>Indépendante</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>De</value>
  </data>
  <data name="Full time" xml:space="preserve">
    <value>À plein temps</value>
  </data>
  <data name="HighSchool" xml:space="preserve">
    <value>Lycée</value>
  </data>
  <data name="Hourly" xml:space="preserve">
    <value>Hourly</value>
  </data>
  <data name="Icurrentlyworkhere" xml:space="preserve">
    <value>Je travaille actuellement ici</value>
  </data>
  <data name="Intern ship" xml:space="preserve">
    <value>Stage</value>
  </data>
  <data name="JobTitle" xml:space="preserve">
    <value>Titre d'emploi</value>
  </data>
  <data name="Knowledge" xml:space="preserve">
    <value>Connaissances</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Nom de famille</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Se déconnecter</value>
  </data>
  <data name="male" xml:space="preserve">
    <value>M</value>
  </data>
  <data name="MobileNumber" xml:space="preserve">
    <value>Numéro de portable</value>
  </data>
  <data name="Monthly" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="OtherDocument" xml:space="preserve">
    <value>Autre document</value>
  </data>
  <data name="Part time" xml:space="preserve">
    <value>À temps partiel</value>
  </data>
  <data name="Partial work from home (hybrid)" xml:space="preserve">
    <value>Travail partiel à domicile (hybride)</value>
  </data>
  <data name="PersonalInformation" xml:space="preserve">
    <value>Renseignements personnels</value>
  </data>
  <data name="PostCode/Zip" xml:space="preserve">
    <value>Code postal / Zip</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Intimité</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profil</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>évaluer</value>
  </data>
  <data name="RateType" xml:space="preserve">
    <value>Rate Type</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>sauvegarder</value>
  </data>
  <data name="sex" xml:space="preserve">
    <value>sexe</value>
  </data>
  <data name="StartWriting" xml:space="preserve">
    <value>Commencez à écrire</value>
  </data>
  <data name="StreetAddress" xml:space="preserve">
    <value>Street Address</value>
  </data>
  <data name="Switzerland" xml:space="preserve">
    <value>Suisse</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>À</value>
  </data>
  <data name="UnitedStates" xml:space="preserve">
    <value>les États-Unis d'Amérique</value>
  </data>
  <data name="University" xml:space="preserve">
    <value>Université</value>
  </data>
  <data name="University/InstituteName" xml:space="preserve">
    <value>Nom de l'université/de l'institut</value>
  </data>
  <data name="UploadDocuments" xml:space="preserve">
    <value>Télécharger des documents</value>
  </data>
  <data name="Work Permit" xml:space="preserve">
    <value>Permis de travail</value>
  </data>
  <data name="WorkExperience" xml:space="preserve">
    <value>L'expérience professionnelle</value>
  </data>
  <data name="Workfromhomeoffsite" xml:space="preserve">
    <value>Travail à domicile (hors site)</value>
  </data>
  <data name="Workplace (on-site)" xml:space="preserve">
    <value>Lieu de travail (sur place)</value>
  </data>
  <data name="Your prefered place of work" xml:space="preserve">
    <value>Votre lieu de travail préféré</value>
  </data>
  <data name="Your prefered type of employment" xml:space="preserve">
    <value>Votre type d'emploi préféré</value>
  </data>
</root>