<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="Add Offer" xml:space="preserve">
    <value>Add Offer</value>
  </data>
  <data name="Additional section" xml:space="preserve">
    <value>Additional section</value>
  </data>
  <data name="AdditionalSalary" xml:space="preserve">
    <value>Additional Salary</value>
  </data>
  <data name="AddressOfWork" xml:space="preserve">
    <value>Address Of Work</value>
  </data>
  <data name="Advantage/OptionalKnowledge" xml:space="preserve">
    <value>Optional/Advantage Knowledge</value>
  </data>
  <data name="Agreement" xml:space="preserve">
    <value>Agreement</value>
  </data>
  <data name="At least one of  selected language" xml:space="preserve">
    <value>At least one of  selected language</value>
  </data>
  <data name="B" xml:space="preserve">
    <value>B</value>
  </data>
  <data name="BasicPriceValidation" xml:space="preserve">
    <value>Basic Price Should be lower Than Upper Price</value>
  </data>
  <data name="BasicSalary" xml:space="preserve">
    <value>Basic Salary</value>
  </data>
  <data name="Benifits" xml:space="preserve">
    <value>Benifits</value>
  </data>
  <data name="C" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="ClearFilters" xml:space="preserve">
    <value>Clear Filters</value>
  </data>
  <data name="Companies" xml:space="preserve">
    <value>Companies</value>
  </data>
  <data name="CompanyPublication" xml:space="preserve">
    <value>Publication</value>
  </data>
  <data name="Complete Profile" xml:space="preserve">
    <value>Complete Profile</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="D" xml:space="preserve">
    <value>D</value>
  </data>
  <data name="DrivingLicence" xml:space="preserve">
    <value>Driving Licence</value>
  </data>
  <data name="E" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="Education" xml:space="preserve">
    <value>Education</value>
  </data>
  <data name="ErrorSave" xml:space="preserve">
    <value>Offer Didnt Save , Please Call With Admin</value>
  </data>
  <data name="Favourites" xml:space="preserve">
    <value>Favourites</value>
  </data>
  <data name="FiveDaysAgo" xml:space="preserve">
    <value>5 Days Ago</value>
  </data>
  <data name="FocusDepartment" xml:space="preserve">
    <value>Focus Department</value>
  </data>
  <data name="ForOneMonth" xml:space="preserve">
    <value>For 1 Month</value>
  </data>
  <data name="ForOneWeek" xml:space="preserve">
    <value>For 1 Week</value>
  </data>
  <data name="ForTwoMonths" xml:space="preserve">
    <value>For 2 Months</value>
  </data>
  <data name="ForTwoWeeks" xml:space="preserve">
    <value>For 2 Weeks</value>
  </data>
  <data name="FourDaysAgo" xml:space="preserve">
    <value>4 Days Ago</value>
  </data>
  <data name="Freelancer" xml:space="preserve">
    <value>Freelancer</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="FullTime" xml:space="preserve">
    <value>Full time</value>
  </data>
  <data name="HighereducationLevel1" xml:space="preserve">
    <value>Higher education Level 1</value>
  </data>
  <data name="HighereducationLevel2" xml:space="preserve">
    <value>Higher education Level 2</value>
  </data>
  <data name="HighereducationLevel3" xml:space="preserve">
    <value>Higher education Level 3</value>
  </data>
  <data name="Highschoollstudent" xml:space="preserve">
    <value>High schooll student</value>
  </data>
  <data name="InternShip" xml:space="preserve">
    <value>Intership</value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="JobDescription" xml:space="preserve">
    <value>Job Description</value>
  </data>
  <data name="JobPosition" xml:space="preserve">
    <value>Job Position</value>
  </data>
  <data name="JobTitle" xml:space="preserve">
    <value>Job Title</value>
  </data>
  <data name="KnowLedageAndRequirements" xml:space="preserve">
    <value>KnowLedage And Requirements</value>
  </data>
  <data name="Knowledgeandlevel" xml:space="preserve">
    <value>Knowledge and level</value>
  </data>
  <data name="Languageandlevel" xml:space="preserve">
    <value>Language and level</value>
  </data>
  <data name="LanguageSkills" xml:space="preserve">
    <value>Language Skills</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="MaybePartially" xml:space="preserve">
    <value>Maybe partially</value>
  </data>
  <data name="MicroSoftWord" xml:space="preserve">
    <value>MicroSoft Word</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="No need culture language (Country language)" xml:space="preserve">
    <value>No need culture language (Country language)</value>
  </data>
  <data name="NoFilterExists" xml:space="preserve">
    <value>There Is No Offer With Your Filter</value>
  </data>
  <data name="Numberofyearsexperince" xml:space="preserve">
    <value>Number of years experince</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Offer" xml:space="preserve">
    <value>Offer</value>
  </data>
  <data name="OfferAddedtoyourFavourit List" xml:space="preserve">
    <value>Offer Added to your Favourit List</value>
  </data>
  <data name="OneDayAgo" xml:space="preserve">
    <value>1 Day Ago</value>
  </data>
  <data name="OneMonthAgo" xml:space="preserve">
    <value>One Month Ago</value>
  </data>
  <data name="OneWeeksAgo" xml:space="preserve">
    <value>One Weeks Ago</value>
  </data>
  <data name="OptionalLanguageSkills" xml:space="preserve">
    <value>Optional Language Skills</value>
  </data>
  <data name="OtherInformation" xml:space="preserve">
    <value>Other Information</value>
  </data>
  <data name="OtherKnowledge" xml:space="preserve">
    <value>Other Knowledge</value>
  </data>
  <data name="PartialWorkFromHome" xml:space="preserve">
    <value>Partial Work From Home</value>
  </data>
  <data name="PartTime" xml:space="preserve">
    <value>Part time</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="PayPal" xml:space="preserve">
    <value>Pay with PayPal</value>
  </data>
  <data name="Per" xml:space="preserve">
    <value>Per</value>
  </data>
  <data name="placeofwork" xml:space="preserve">
    <value>place of work</value>
  </data>
  <data name="PositionDescription" xml:space="preserve">
    <value>Position Description</value>
  </data>
  <data name="PostSecondary" xml:space="preserve">
    <value>Post Secondary</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Primary education" xml:space="preserve">
    <value>Primary education</value>
  </data>
  <data name="Publication" xml:space="preserve">
    <value>Publication</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Remote</value>
  </data>
  <data name="RequiredJuniorKnowledge" xml:space="preserve">
    <value>Required Junior Knowledge</value>
  </data>
  <data name="RequiredLanguageSkills" xml:space="preserve">
    <value>Required Language Skills</value>
  </data>
  <data name="RequiredSeniorknowledge" xml:space="preserve">
    <value>Required Senior knowledge</value>
  </data>
  <data name="RequirementsPerEmployee" xml:space="preserve">
    <value>Requirments Per Employee</value>
  </data>
  <data name="Requires knowledge  of all selected language" xml:space="preserve">
    <value>Requires knowledge  of all selected language</value>
  </data>
  <data name="Review" xml:space="preserve">
    <value>Review</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveSuccess" xml:space="preserve">
    <value>Your Offer Save Successfully</value>
  </data>
  <data name="Secondaryschoollwithgraduation" xml:space="preserve">
    <value>Secondary schooll with graduation</value>
  </data>
  <data name="Secondaryschoollwithoutgraduation" xml:space="preserve">
    <value>Secondary schooll without graduation</value>
  </data>
  <data name="selectALanguage" xml:space="preserve">
    <value>Select a Language</value>
  </data>
  <data name="selectAlevel" xml:space="preserve">
    <value>select a level</value>
  </data>
  <data name="SendCvByEmail" xml:space="preserve">
    <value>Send Cv By Email</value>
  </data>
  <data name="ShowApplicantsSalary" xml:space="preserve">
    <value>Show Salary to Applicant</value>
  </data>
  <data name="ThereIsNoOfferRegisteredForyourJobCategoriesOrLocation" xml:space="preserve">
    <value>There Is No Offer Registered For your JobCategories Or Location</value>
  </data>
  <data name="ThisFieldIsRequired" xml:space="preserve">
    <value>This Field Is Required</value>
  </data>
  <data name="ThreeDaysAgo" xml:space="preserve">
    <value>3 Days Ago</value>
  </data>
  <data name="ToDay" xml:space="preserve">
    <value>ToDay</value>
  </data>
  <data name="TravelRequirement" xml:space="preserve">
    <value>Travel Requirement</value>
  </data>
  <data name="TwoDaysAgo" xml:space="preserve">
    <value>2 Days Ago</value>
  </data>
  <data name="TwoMonthsAgo" xml:space="preserve">
    <value>Two Months Ago</value>
  </data>
  <data name="TwoWeeksAgo" xml:space="preserve">
    <value>Two Weeks Ago</value>
  </data>
  <data name="TypeOfContract" xml:space="preserve">
    <value>Type Of Contract</value>
  </data>
  <data name="Typeofemployment" xml:space="preserve">
    <value>Type of employment</value>
  </data>
  <data name="UniversityStudent" xml:space="preserve">
    <value>University student</value>
  </data>
  <data name="UpperLimit" xml:space="preserve">
    <value>Upper Limit</value>
  </data>
  <data name="WageConditions" xml:space="preserve">
    <value>Wage Conditions</value>
  </data>
  <data name="WorkAtTheRegularWorkPlace" xml:space="preserve">
    <value>Work at the Regular Work place</value>
  </data>
  <data name="WorkingFromHome" xml:space="preserve">
    <value>Working From Home</value>
  </data>
  <data name="WorkOnlyAtTheWorkplace" xml:space="preserve">
    <value>Work only at the workplace</value>
  </data>
  <data name="WorkOnlyFromHome" xml:space="preserve">
    <value>Work only from home</value>
  </data>
  <data name="WorkRequiresTravell" xml:space="preserve">
    <value>Work Requires Travell</value>
  </data>
</root>